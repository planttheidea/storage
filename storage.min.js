/*
 *
 * Copyright 2014 Tony Quetano under the terms of the MIT
 * license found at https://github.com/planttheidea/pledge/MIT_License.txt
 *
 * storage.js - A mini library to provide a simple API to access Web Storage, with cookies as a fallback
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*/
(function(g,k){function l(a,b){if(a){if(b)return e[b][a];var c=e.local[a],d=e.session[a];if(c)return d?{local:c,session:d}:c;if(d)return d}else return b?e[b]:e}function s(a,b,c){c=c||"session";if(a&&b)"string"!==h(b)&&(b=JSON.stringify(b)),"local"===c?t.local(a,b):"session"===c&&t.session(a,b);else throw Error("Must pass name and value of storage item to assign.");}function m(a,b){if(a)b?"local"===b?f.local(a):f.session(a):(f.local(a),f.session(a));else if(b)if("local"===b)for(var c in e.local)f.local(c);
else{if("session"===b)for(c in e.session)f.session(c)}else{for(c in e.local)f.local(c);for(c in e.session)f.session(c)}}var h=function(a){return function(b){return b===a?"global":{}.toString.call(b).match(/\s([a-z|A-Z]+)/)[1].toLowerCase()}}(this),n;try{g.localStorage.setItem("t","t"),g.localStorage.removeItem("t"),n=!0}catch(u){n=!1}var p=n,q;try{g.sessionStorage.setItem("t","t"),g.sessionStorage.removeItem("t"),q=!0}catch(v){q=!1}var r=q,e={local:function(){var a={};if(p)for(var b in g.localStorage){if(b&&
null!==b){var c=g.localStorage[b];try{var d=JSON.parse(c),c=d}catch(e){}a[b]=c}}else if(k.cookie)for(var h=k.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g,"").split(/\s*(?:\=[^;]*)?;\s*/),f=0,l=h.length;f<l;f++){h[f]=decodeURIComponent(h[f]);c=decodeURIComponent(k.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*"+encodeURIComponent(h[f]).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*([^;]*).*$)|^.*$"),"$1"));try{c=d=JSON.parse(c)}catch(m){}a[b]=c}return a}(),session:function(){var a=
{};if(r)for(var b in g.localStorage)switch(h(b)){case "undefined":case "null":break;default:var c=g.localStorage[b];try{c=JSON.parse(c)}catch(d){}a[b]=c}return a}()},t={local:function(){return p?function(a,b){a&&a.length&&(e.local[a]=b,g.localStorage.setItem(a,b))}:function(a,b){if(!a||/^(?:expires|max\-age|path|domain|secure)$/i.test(a))return!1;e.local[a]=b;k.cookie=encodeURIComponent(a)+"="+encodeURIComponent(b)+"; expires=Fri, 31 Dec 9999 23:59:59 GMT";return!0}}(),session:function(){return r?
function(a,b){a&&a.length&&(e.session[a]=b,g.sessionStorage.setItem(a,b))}:function(a,b){if(!a||/^(?:expires|max\-age|path|domain|secure)$/i.test(a))return!1;e.session[name]=b;k.cookie=encodeURIComponent(a)+"="+encodeURIComponent(b);return!0}}()},f={local:function(){return p?function(a){e.local[a]&&(delete e.local[a],g.localStorage.removeItem(a))}:function(a){e.local[a]&&(delete e.local[a],k.cookie=encodeURIComponent(a)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT")}}(),session:function(){return r?function(a){e.session[a]&&
(delete e.session[a],g.sessionStorage.removeItem(a))}:function(a){e.session[a]&&(delete e.session[a],k.cookie=encodeURIComponent(a)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT")}}()};g.Storage={get:function(a,b){switch(h(a)){case "object":switch(h(a.data)){case "string":return l(a.data,a.type||b);case "array":for(var c={},d=0,f=a.data.length;d<f;d++)c[a.data[d]]=l(a.data[d],a.type||b);return c;default:throw Error("Invalid type passed to get, must be either an array or a string.");}case "array":c={};
d=0;for(f=a.length;d<f;d++)c[a[d]]=l(a[d],b);return c;case "string":switch(a){case "local":case "session":return e[a];default:return l(a,b)}case "undefined":return e;default:throw Error("Invalid type passed to get, must be either an array or a string.");}},remove:function(a,b){switch(h(a)){case "object":switch(h(a.data)){case "string":m(a.data,a.type||b);break;case "array":for(var c=0,d=a.data.length;c<d;c++)m(a.data[c],a.type||b);break;default:throw Error("Invalid type passed to get, must be either an array or a string.");
}break;case "array":c=0;for(d=a.length;c<d;c++)m(a[c],b);break;case "string":m(a,b);break;default:throw Error("Invalid type passed to remove, must be either an object or array (for multiple keys), or a string (for a single key).");}},set:function(a,b,c){switch(h(a)){case "object":if("object"===h(a.data))for(var d in a.data)return s(d,a.data[d],a.type);else throw Error("Invalid type passed to data, must be an object.");break;case "string":return s(a,b,c);default:throw Error("Invalid type passed to set, must be either an object (for multiple keys) or a string (for a single key).");
}}}})(window,document);
